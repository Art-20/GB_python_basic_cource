# Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников
# и возвращающую словарь, в котором ключи — первые буквы имён,
# а значения — списки, содержащие имена, начинающиеся с соответствующей буквы.
#
# Например:
#
# >>> thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"],
#     "М": ["Мария"],
#     "П": ["Петр"]
# }
#
# Подумайте:
#
#     полезен ли будет вам оператор распаковки?
#     Как поступить, если потребуется сортировка по ключам?
#     Можно ли использовать словарь в этом случае?


def thesaurus(*args) -> dict:
    """Преобразует список имен в словарь {Первая буква: [имя_1, имя_2...]}
       Ключ словаря - первая буква, значения - список имен, начинающихся на эту букву
    """
    dict_out = {}                                               # результирующий словарь значений
    for name in args:
        first_latter = name[:1]                                 # находит первую букву в каждом ииени
        list_name = []                                          # список имен, начинающихся на одну букву
        for name in args:
            if first_latter == name[:1]:
                list_name.append(name)                          # добавляет имена в список значений
                dict_out.setdefault(first_latter, list_name)    # добавляет ключ и список значений в словарь
    return dict_out


print(thesaurus("Иван", "Мария", "Петр", "Илья"))